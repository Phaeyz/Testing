name: ~Lib~ Create Version Tag

on:
  workflow_call:
    inputs:
      checkout-repo:
        type: boolean
        default: true
      breaking-change:
        required: true
        type: boolean
      new-feature:
        required: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      new_tag: ${{ steps.new_version.outputs.NEW_TAG }}

    steps:
    - name: Checkout Repository
      if: ${{ inputs.checkout-repo }}
      uses: actions/checkout@v4

    - name: Determine New Version
      id: new_version
      run: |
        git fetch --tags
        LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` || echo "0.0.0")
        echo "Latest tag: $LATEST_TAG"
        VERSION_PARTS=(${LATEST_TAG//./ })
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}

        echo "breaking-change: ~${{ github.event.inputs.breaking-change }}~, ~${{ github.event.inputs.breaking-change == 'true' }}~"
        echo "new-feature: ~${{ github.event.inputs.new-feature }}~, ~${{ github.event.inputs.new-feature == 'true' }}~"
    
        if [ "${{ github.event.inputs['breaking-change'] }}" == "true" ]; then
          echo "INCREMENTING MAJOR"
          MAJOR=$((MAJOR + 1))
          MINOR=0
          PATCH=0
        elif [ "${{ github.event.inputs['new-feature'] }}" == "true" ]; then
          echo "INCREMENTING MINOR"
          MINOR=$((MINOR + 1))
          PATCH=0
        else
          echo "INCREMENTING PATCH"
          PATCH=$((PATCH + 1))
        fi
    
        NEW_TAG="$MAJOR.$MINOR.$PATCH"
        echo "New tag: $NEW_TAG"
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT

    - name: Create Git Tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        NEW_TAG=${{ steps.new_version.outputs.NEW_TAG }}
        git config --global user.name "Phaeyz"
        git config --global user.email "phaeyz@pm.me"
        git tag $NEW_TAG
        git push origin $NEW_TAG